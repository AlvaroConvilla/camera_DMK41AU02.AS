#!/usr/bin/env python3

# Copyright 2016 The Imaging Source Europe GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# This example will show you how to retrieve the available gstreamer
# caps from tcamsrc and how to display print them to stdout.
#


import sys
import gi

gi.require_version("Tcam", "0.1")
gi.require_version("Gst", "1.0")

from gi.repository import Tcam, Gst


def print_help():
    print("Print available gstreamer caps for device.")
    print("Usage:\n\tformat_list [<serial>]")
    print("Help options:\n\t-h, --help\t\tPrint this text.")
    print("\n\n")


def main():
    Gst.init(sys.argv)  # init gstreamer
    serial = None

    if len(sys.argv) > 1:
        if "-h" in sys.argv[1] or "--help" in sys.argv[1]:
            print_help()
            return
        serial = sys.argv[1]

    source = Gst.ElementFactory.make("tcamsrc")

    # if we have a serial we clearly do not want the default device
    if serial:
        source.set_property("serial", serial)

    # ensure that the real caps are available
    source.set_state(Gst.State.PAUSED)

    caps = source.pads[0].query_caps()

    # the string to_string delivers contains caps structures that are separated
    # through a semicolon(;). We split the string to make the caps more readable.
    for s in caps.to_string().split(";"):
        print(s)

    # cleanup
    # state NULL will close any internal device handles should they exist
    source.set_state(Gst.State.NULL)


if __name__ == "__main__":
    main()
